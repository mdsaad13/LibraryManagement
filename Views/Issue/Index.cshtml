@model LibraryManagement.Models.IssueBundle

@{
    ViewBag.Title = "Manage Books Issues";
    ViewData["Active_Book_Issues"] = "active";
}
@section head {
    <link rel="stylesheet" href="~/Libs/DataTables/dataTables.bootstrap4.css" />
    <link rel="stylesheet" type="text/css" href="~/Libs/daterangepicker/daterangepicker.css" />
    <style>
        .small{
            font-size: 80%;
    font-weight: 400;
        }
    </style>
}

<!-- Modal -->
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle">Issue Book</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            @using (Html.BeginForm("Add", "Issue"))
            {
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <div class="form-group">
                            @Html.LabelFor(model => model.NewIssue.BookID, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.NewIssue.BookID, ViewBag.BooksList as SelectList, "Select Book", new { @class = "custom-select" })
                                @Html.ValidationMessageFor(model => model.NewIssue.BookID, "", new { @class = "text-danger" })
                                <p class="small">Only available books will be displayed</p>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NewIssue.StudentID, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.NewIssue.StudentID, ViewBag.StudentsList as SelectList, "Select Student", new { @class = "custom-select" })
                                @Html.ValidationMessageFor(model => model.NewIssue.StudentID, "", new { @class = "text-danger" })
                                <p class="small">Students who have taken more than 3 books will not be displayed</p>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NewIssue.ReturnDate, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.NewIssue.ReturnDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter isbn", @value = DateTime.Now.AddDays(7) } })
                                @Html.ValidationMessageFor(model => model.NewIssue.ReturnDate, "", new { @class = "text-danger" })
                                <p class="small">Minimum 2 Days, Maximum 10 Days</p>
                            </div>
                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Issue Book</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Page Heading -->
<div class="align-items-center justify-content-between mb-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
        </ol>
    </nav>
</div>

<div class="row">

    <div class="col-12 col-lg-12">
        <div class="card shadow mb-4 border-bottom-primary">
            <div class="card-header py-3">
                <div class="row">
                    <div class="col-6">
                        <h6 class="m-0 font-weight-bold text-primary">
                            Books Issued
                        </h6>
                    </div>
                    <div class="col-6 text-right">
                        <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#exampleModalCenter">
                            Issue Book
                        </button>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <table class="table" id="dataTable">
                    <thead>
                        <tr>
                            <th>
                                Sl no.
                            </th>
                            <th>
                                Book ID
                            </th>
                            <th>
                                Student ID
                            </th>
                            <th>
                                Issue Date
                            </th>
                            <th>
                                Return Date
                            </th>
                            <th>
                                Penalty
                            </th>
                            <th>
                                Actions
                            </th>
                        </tr>
                    </thead>

                    @{ int i = 1; }
                    @foreach (var item in Model.Issued)
                    {
                        <tr>
                            <td>
                                @i
                            </td>
                            <td>
                                <a href="@Url.Action("Details", "Book",  new { id = item.BookISBN })">
                                    @item.BookISBN <br />
                                    <span class="text-black-50">@item.BookTitle</span>
                                </a>
                            </td>
                            <td>
                                <a href="@Url.Action("Details", "Student",  new { id = item.StudentID })">
                                    STD-@item.StudentID <br />
                                    <span class="text-black-50">@item.StudentName</span>
                                </a>
                            </td>
                            <td>
                                @item.IssueDate.ToLongDateString()
                            </td>
                            <td>
                                @item.ReturnDate.ToLongDateString()
                            </td>
                            <td>
                                @{
                                    double PenaltyAmt = 0;
                                    int Cmpresult = DateTime.Compare(DateTime.Now, item.ReturnDate);
                                    if (Cmpresult > 0)
                                    {
                                        double ExceededDays = (DateTime.Now - item.ReturnDate).TotalDays;
                                        PenaltyAmt = (int)ExceededDays * 5;
                                    }
                                    @PenaltyAmt.ToString("C")
                                }
                            </td>
                            <td>
                                <a href="@Url.Action("Return", new { IssueID = item.ID })" class="btn btn-outline-success btn-sm">
                                    Return
                                </a>
                            </td>
                        </tr>
                        i++;
                    }
                    <tfoot>
                        <tr>
                            <th>
                                Sl no.
                            </th>
                            <th>
                                Book ID
                            </th>
                            <th>
                                Student ID
                            </th>
                            <th>
                                Issue Date
                            </th>
                            <th>
                                Return Date
                            </th>
                            <th>
                                Penalty
                            </th>
                            <th>
                                Actions
                            </th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>

    </div>

    <div class="col-12 col-lg-12">
        <div class="card shadow mb-4 border-bottom-primary">
            <div class="card-header py-3">
                <div class="row">
                    <div class="col-6">
                        <h6 class="m-0 font-weight-bold text-primary">
                            Books Returned
                        </h6>
                    </div>
                    <div class="col-6 text-right">

                    </div>
                </div>
            </div>
            <div class="card-body">
                <table class="table" id="dataTable1">
                    <thead>
                        <tr>
                            <th>
                                Sl no.
                            </th>
                            <th>
                                Book ID
                            </th>
                            <th>
                                Student ID
                            </th>
                            <th>
                                Issue Date
                            </th>
                            <th>
                                Return On
                            </th>
                            <th>
                                Penalty Collected
                            </th>
                        </tr>
                    </thead>

                    @{ int j = 1; }
                    @foreach (var item in Model.Returned)
                    {
                        <tr>
                            <td>
                                @j
                            </td>
                            <td>
                                <a href="@Url.Action("Details", "Book",  new { id = item.BookISBN })">
                                    @item.BookISBN <br />
                                    <span class="text-black-50">@item.BookTitle</span>
                                </a>
                            </td>
                            <td>
                                <a href="@Url.Action("Details", "Student",  new { id = item.StudentID })">
                                    STD-@item.StudentID <br />
                                    <span class="text-black-50">@item.StudentName</span>
                                </a>
                            </td>
                            <td>
                                @item.IssueDate.ToLongDateString()
                            </td>
                            <td>
                                @item.ReturnedOn.ToLongDateString()
                            </td>
                            <td>
                                @item.PenaltyAmount.ToString("C")
                            </td>
                        </tr>
                        j++;
                    }
                    <tfoot>
                        <tr>
                            <th>
                                Sl no.
                            </th>
                            <th>
                                Book ID
                            </th>
                            <th>
                                Student ID
                            </th>
                            <th>
                                Issue Date
                            </th>
                            <th>
                                Return On
                            </th>
                            <th>
                                Penalty Collected
                            </th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>

    </div>

</div>
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript" src="~/Libs/DataTables/jquery.dataTables.js"></script>
    <script type="text/javascript" src="~/Libs/DataTables/dataTables.bootstrap4.js"></script>
    <script type="text/javascript" src="~/Libs/daterangepicker/moment.js"></script>
    <script type="text/javascript" src="~/Libs/daterangepicker/daterangepicker.js"></script>
    <script>
        // Call the dataTables jQuery plugin
        $(document).ready(function () {
            $('#dataTable').DataTable();
            $('#dataTable1').DataTable();
        });

        // Date functions
        $(function () {
            $('#NewIssue_ReturnDate').daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                startDate: moment().add(7, 'days').format('YYYY-MM-DD'),
                minDate: moment().add(2, 'days').format('YYYY-MM-DD'),
                maxDate: moment().add(10, 'days').format('YYYY-MM-DD'),
                minYear: parseInt(moment().format('YYYY')),
                maxYear: parseInt(moment().format('YYYY')),
                opens: 'center',
                drops: 'up',
                locale: {
                    format: 'YYYY-MM-DD'
                }
            });
        });

    </script>

    <script type="text/javascript" src="~/Libs/sweetalert2/sweetalert2.js"></script>
    <script>
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        });
    </script>
    @{
        //Initializing Notification
        int Notification = 0;
        try
        {
            /*
            * try block to check if Session["Notification"] exist
            * if exist then convert  string to int
            */
            Notification = Convert.ToInt32(Session["Notification"]);
        }
        catch
        { }
        if (Notification == 1) //insert success
        {
            <script type="text/javascript">
                swalWithBootstrapButtons.fire({
                    icon: 'success',
                    title: 'Book issued successfully!',
                    text: '',
                })
            </script>
            // Resetting Session["Notification"]
            Session["Notification"] = null;
        }
        else if (Notification == 2) //insert failure
        {
            <script type="text/javascript">
                swalWithBootstrapButtons.fire({
                    icon: 'error',
                    title: 'Book issued failed!',
                    text: 'Please try again later',
                })
            </script>
            // Resetting Session["Notification"]
            Session["Notification"] = null;
        }
        else if (Notification == 3) //update failure
        {
            <script type="text/javascript">
                swalWithBootstrapButtons.fire({
                    icon: 'success',
                    title: 'Book returned successfully!',
                    text: '',
                })
            </script>
            // Resetting Session["Notification"]
            Session["Notification"] = null;
        }
        else if (Notification == 4) //update failure
        {
            <script type="text/javascript">
                swalWithBootstrapButtons.fire({
                    icon: 'error',
                    title: 'Book return failed!',
                    text: 'Please try again later',
                })
            </script>
            // Resetting Session["Notification"]
            Session["Notification"] = null;
        }

    }

}
